[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.1"
django-htmx = "^1.19.0"
pydantic-settings = "^2.4.0"
django-cotton = "^0.9.35"
django-widget-tweaks = "^1.5.0"
selenium = "^4.25.0"
qrcode = {extras = ["pil"], version = "^7.4.2"}
celery = "^5.4.0"
django-celery-beat = "^2.7.0"
redis = "^5.1.0"
webwhatsapi = "^2.0.5"
django-import-export = "^4.1.1"
channels-redis = "^4.2.0"
channels = "^4.1.0"
uvicorn = "^0.31.0"
webdriver-manager = "^4.0.2"
httpx = "^0.27.2"
gunicorn = "^23.0.0"
django-cors-headers = "^4.5.0"
psycopg2-binary = "^2.9.10"
blacknoise = "^1.1.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.4"
djlint = "^1.35.2"
django-debug-toolbar = "^4.4.6"
taskipy = "^1.13.0"

[tool.taskipy.tasks]
lint = 'ruff check . && djlint . --check'
format = 'ruff check . --fix && ruff format . && djlint . --reformat --quiet'
run = 'uvicorn core.asgi:application --port 8082 --reload --log-level debug'
makemigrations = 'python warmzap/manage.py makemigrations'
migrate = 'python warmzap/manage.py migrate'
runworker = 'celery -A core worker -l info'
runbeatdjango = 'celery -A core beat -S django -l info'
runbeat = 'celery -A core beat -l info'

[tool.djlint]
max_blank_lines = 1
indent = 4
tabs = true
format_css = true
format_js = true
use_gitignore = true
space_around_blocks = true
blank_line_before_tag = 'include,block,endblock,crispy,if,else,endif,for,endfor,comment,endcomment,with'
blank_line_after_tag = 'include,block,endblock,crispy,if,else,endif,for,endfor,comment,endcomment,with,load,extends'
ignore = 'H005,H006,H007,H008,H009,H010,H011,H012,H013,H014,H015,H016,H017,H019,H020,H021,H022,H023,H024,H025,H026,H029,H030,H031,H033,H035'

[tool.djlint.css]
indent_size = 4

[tool.djlint.js]
indent_size = 4

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = [
    'A',
    'B',
    'C',
    'E',
    'F',
    'I',
    'N',
    'PL',
    'PT',
    'Q',
    'S',
    'T',
    'W',
    'DJ',
]
ignore = ['E501', 'Q000', 'Q003', 'S101', 'DJ008']

[tool.ruff.format]
preview = true
quote-style = 'single'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"